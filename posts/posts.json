[
  {
    "path": "posts/welcome/",
    "title": "Welcome to My Blog",
    "description": "Welcome to our new blog, My Blog. We hope you enjoy \nreading what we have to say!",
    "author": [
      {
        "name": "Nora Jones",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2021-02-26",
    "categories": [],
    "contents": "\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-02-26T15:50:30-05:00",
    "input_file": {}
  },
  {
    "path": "posts/maps-in-r/",
    "title": "Interactive Choropleth Maps in R",
    "description": "Guide to making interactive choropleth maps with the Highcharter package.",
    "author": [
      {
        "name": "Kyle Cuilla",
        "url": {}
      }
    ],
    "date": "2020-04-05",
    "categories": [],
    "contents": "\r\nThis post shows you how to create interactive maps in R using the highcharter package.\r\nWhy Interactive Maps?\r\nStatic maps are an effective visual tool that communicate geographic data in an interpretive way that is generally lost if that data is only viewed in a spreadsheet.\r\nAdding interactivity to a map further improves data interpretability by allowing users to:\r\nExplore the data by zooming in on areas of interest\r\nChoose what data values to be displayed or excluded\r\nHover over an area of interest and get additional info/the exact value that’s being displayed\r\nInteractive Choropleth Map\r\nThe first interactive map I will show you how to create is a population density map by county for the state of Texas:\r\n\r\n\r\n\r\n\r\n\r\n{\"x\":{\"url\":\"guide-to-making-maps_files/figure-html5//widgets/widget_unnamed-chunk-2.html\",\"options\":{\"xdomain\":\"*\",\"allowfullscreen\":false,\"lazyload\":false}},\"evals\":[],\"jsHooks\":[]}\r\n\r\nPrerequisites\r\nBefore we get started, you will need to load the following packages:\r\n\r\n\r\nlibrary(data.table)\r\nlibrary(highcharter)\r\nlibrary(dplyr)\r\nlibrary(tidyr)\r\nlibrary(RColorBrewer)\r\n\r\n\r\n\r\nData Prep\r\nThe dataset we’ll be using is from the USDA ERS. The data is available in both xlsx and csv format. I downloaded the data in csv format and loaded the People.csv file which contains the population estimates:\r\n\r\n\r\n# Load USDA ERS dataset\r\ncounty_df <- fread(\"C:/Users/Kyle/Downloads/People.csv\") %>% \r\n  filter(State == 'TX')\r\n\r\n\r\n\r\nThe dataset contains FIPS codes for each county. In order to map this data, we will need to join it to the dataset containing the geographic information for each county from the highcharter package.\r\n\r\n\r\n# Load Texas county map\r\ntx_counties <- get_data_from_map(download_map_data(\"countries/us/us-tx-all\"))\r\n\r\nglimpse(tx_counties)\r\n\r\n\r\nRows: 254\r\nColumns: 7\r\n$ `hc-group`    <chr> \"admin2\", \"admin2\", \"admin2\", \"admin2\", \"ad...\r\n$ `hc-middle-x` <dbl> 0.50, 0.50, 0.50, 0.50, 0.50, 0.52, 0.36, 0...\r\n$ `hc-middle-y` <dbl> 0.50, 0.50, 0.50, 0.50, 0.77, 0.50, 0.36, 0...\r\n$ `hc-key`      <chr> \"us-tx-179\", \"us-tx-393\", \"us-tx-311\", \"us-...\r\n$ `hc-a2`       <chr> \"GR\", \"RO\", \"MC\", \"DU\", \"LO\", \"LE\", \"HO\", \"...\r\n$ fips          <chr> \"48179\", \"48393\", \"48311\", \"48131\", \"48297\"...\r\n$ name          <chr> \"Gray\", \"Roberts\", \"McMullen\", \"Duval\", \"Li...\r\n\r\nBefore joining the datasets, we need to calculate the population density for 2018. We can do this by using mutate from the dplyr package to create a column called ‘density’ and divide the ‘TotalPopEst2018’ column by the ‘LandAreaSQMiles2010’ column as shown below:\r\n\r\n\r\n# Calculate population density\r\ndensity_df <- county_df %>% \r\n  select(c(fips=FIPS,County,TotalPopEst2018,LandAreaSQMiles2010)) %>%\r\n  mutate(density = round(TotalPopEst2018/LandAreaSQMiles2010,0))\r\n\r\nhead(density_df)\r\n\r\n\r\n    fips   County TotalPopEst2018 LandAreaSQMiles2010 density\r\n1: 48000    Texas        28701845           261231.71     110\r\n2: 48001 Anderson           58057             1062.60      55\r\n3: 48003  Andrews           18128             1500.71      12\r\n4: 48005 Angelina           87092              797.78     109\r\n5: 48007  Aransas           23792              252.07      94\r\n6: 48009   Archer            8786              903.11      10\r\n\r\nCreating the Map\r\nUsing the hcmap function from highcharter, we can create a basic interactive map like this one:\r\n\r\n\r\n# Create interactive map of Texas counties\r\ndensity_map <- hcmap(map = \"countries/us/us-tx-all\", \r\n      data = density_df, \r\n      value = \"density\", \r\n      joinBy = c(\"fips\"))  %>%\r\n  hc_mapNavigation(enabled = TRUE)\r\n\r\n\r\n\r\n\r\n\r\n{\"x\":{\"url\":\"guide-to-making-maps_files/figure-html5//widgets/widget_unnamed-chunk-8.html\",\"options\":{\"xdomain\":\"*\",\"allowfullscreen\":false,\"lazyload\":false}},\"evals\":[],\"jsHooks\":[]}\r\n\r\nCustomizing the Map\r\nIn the map above, the counties with the highest population densities clearly stand out. However, it is difficult to distinguish the differences between the counties with lower population densities.\r\nIn order to correct this, we can assign color breaks to the data by utilizing the hc_colorAxis function and assigning a color palette from the RColorBrewer package:\r\n\r\n\r\n# Add color classes and legend to map\r\ndensity_map <- hcmap(\r\n  map = \"countries/us/us-tx-all\",\r\n  data = density_df,\r\n  value = \"density\",\r\n  joinBy = c(\"fips\"),\r\n  borderWidth = 0.3\r\n)  %>%\r\n  hc_mapNavigation(enabled = TRUE) %>%\r\n  hc_legend(layout = \"vertical\",\r\n            align = \"right\",\r\n            valueDecimals = 0) %>% \r\n  hc_colorAxis(dataClasses = color_classes(\r\n    breaks = c(0, 5, 10, 25, 50, 100, 1000, 2000, 3000, 3500),\r\n    colors = c(\"#FECE91\",\"#FE9F6D\",\"#F76F5C\",\"#DE4968\",\"#B63679\",\"#8C2981\",\"#641A80\",\"#3B0F70\",\"#150E37\")\r\n  ))\r\n\r\n\r\n\r\nThe next thing we will need to do is modify what is displayed when you hover (or click if you are viewing on a mobile device) on a particular county.\r\n\r\n\r\n# Add custom tooltip to map\r\ndensity_map <- density_map %>%\r\n  hc_tooltip(\r\n    headerFormat = \"\",\r\n    pointFormat = \"{point.name}: {point.value}\",\r\n    valueDecimals = 0\r\n  )\r\n\r\n\r\n\r\nNow, the only thing left is to add a title and source to the map which we can do with the hc_title and hc_credits options:\r\n\r\n\r\n# Add title and credits to map\r\ndensity_map <- density_map %>%\r\n  hc_title(text = \"Population Density by County, 2018\") %>%\r\n  hc_credits(enabled = TRUE,\r\n             text = \"Author: Kyle Cuilla, Data: USDA ERS\",\r\n             href = \"https://www.ers.usda.gov/data-products/atlas-of-rural-and-small-town-america/download-the-data/\")\r\n\r\n\r\n\r\nAnd here is our final result!\r\n\r\n\r\n{\"x\":{\"url\":\"guide-to-making-maps_files/figure-html5//widgets/widget_unnamed-chunk-12.html\",\"options\":{\"xdomain\":\"*\",\"allowfullscreen\":false,\"lazyload\":false}},\"evals\":[],\"jsHooks\":[]}\r\n\r\nAnimated Choropleth Map\r\nSo now we have our map that displays the population density by county in 2018.\r\nLet’s say that we want to see how the population density has changed over time. How would we go about doing this?\r\nWell, we could create nine separate maps (one for each year from 2010 to 2018), but this would take up a lot of space and because the maps would each be separate, and because each map would be separate, it may be difficult to detect subtle difference between each year.\r\nTo solve these issues, we can create an animated map instead.\r\n\r\n\r\n\r\n\r\nData Prep\r\nThe county_df dataset we’ve been using contains estimated populations for each year.\r\nWe can calculate the population densities for each of these years by creating a function called ‘pop_density’ and applying it to each population estimate.\r\nWe can then use the gather function from the tidyr package to put all of the population densities into a single column called ‘density’ and all of the years into a single column called ‘years’.\r\n\r\n\r\n# Calculate population density for each year in dataset\r\npop_density <- function(x) {\r\n  round(x / county_df$LandAreaSQMiles2010, 0)\r\n}\r\n\r\ndensity_df_by_year <- county_df %>%\r\n  select(\r\n    c(\r\n      FIPS,\r\n      State,\r\n      County,\r\n      '2010' = TotalPopEst2010,\r\n      '2011' = TotalPopEst2011,\r\n      '2012' = TotalPopEst2012,\r\n      '2013' = TotalPopEst2013,\r\n      '2014' = TotalPopEst2014,\r\n      '2015' = TotalPopEst2015,\r\n      '2016' = TotalPopEst2016,\r\n      '2017' = TotalPopEst2017,\r\n      '2018' = TotalPopEst2018\r\n    )\r\n  ) %>%\r\n  mutate_at(vars(matches(\"201\")), pop_density) %>%\r\n  filter(State == 'TX') %>%\r\n  gather(year, density, -c(FIPS, State, County)) %>%\r\n  mutate(fips = ifelse(nchar(FIPS) < 5, paste0(\"0\", FIPS), FIPS)) %>%\r\n  filter(!grepl('000', FIPS),!State == 'US')\r\n\r\nhead(density_df_by_year)\r\n\r\n\r\n   FIPS State    County year density  fips\r\n1 48001    TX  Anderson 2010      55 48001\r\n2 48003    TX   Andrews 2010      10 48003\r\n3 48005    TX  Angelina 2010     109 48005\r\n4 48007    TX   Aransas 2010      92 48007\r\n5 48009    TX    Archer 2010      10 48009\r\n6 48011    TX Armstrong 2010       2 48011\r\n\r\nThe animated highcarter map needs the population densities in a single list called ‘sequence’ in order to work properly. We can create the list of densities by using the list_parse function:\r\n\r\n\r\n# Create list column containing population densities by year \r\ndensity_df_seq <- density_df_by_year %>%\r\n  group_by(fips) %>%\r\n  do(sequence = list_parse(select(., value = density)))\r\n\r\nhead(density_df_seq)\r\n\r\n\r\n# A tibble: 6 x 2\r\n# Rowwise: \r\n   fips sequence  \r\n  <int> <list>    \r\n1 48001 <list [9]>\r\n2 48003 <list [9]>\r\n3 48005 <list [9]>\r\n4 48007 <list [9]>\r\n5 48009 <list [9]>\r\n6 48011 <list [9]>\r\n\r\nYou can see in the output we have a column containing the FIPS codes for each county and a list of length 9 which contains one population density value for each year from 2010 to 2018.\r\nNext, we need to join this dataset back to the original dataset so that we have the county names, years, and population densities all in one dataset:\r\n\r\n\r\n# Join with original dataset\r\ndensity_df_by_year <- left_join(density_df_by_year,density_df_seq)\r\n\r\nhead(density_df_by_year)\r\n\r\n\r\n   FIPS State    County year density  fips\r\n1 48001    TX  Anderson 2010      55 48001\r\n2 48003    TX   Andrews 2010      10 48003\r\n3 48005    TX  Angelina 2010     109 48005\r\n4 48007    TX   Aransas 2010      92 48007\r\n5 48009    TX    Archer 2010      10 48009\r\n6 48011    TX Armstrong 2010       2 48011\r\n                                     sequence\r\n1          55, 55, 55, 55, 54, 54, 54, 55, 55\r\n2          10, 10, 11, 11, 12, 12, 12, 12, 12\r\n3 109, 109, 110, 109, 110, 110, 110, 110, 109\r\n4        92, 92, 93, 95, 97, 98, 100, 101, 94\r\n5          10, 10, 10, 10, 10, 10, 10, 10, 10\r\n6                   2, 2, 2, 2, 2, 2, 2, 2, 2\r\n\r\nCreating the Map\r\nTo create the animated map, all we need to do is take the existing density_map that we created and update the dataset from density_df to density_df_by_year\r\n\r\n\r\n# Create interactive map of Texas counties\r\nanimated_map <- hcmap(\r\n  map = \"countries/us/us-tx-all\",\r\n  data = density_df_by_year,\r\n  value = \"density\",\r\n  joinBy = c(\"fips\"),\r\n  borderWidth = 0.3\r\n)  %>%\r\n  hc_mapNavigation(enabled = TRUE) %>%\r\n  hc_colorAxis(dataClasses = color_classes(\r\n    breaks = c(0, 5, 10, 25, 50, 100, 1000, 2000, 3000, 3500),\r\n    colors = c(\"#FECE91\",\"#FE9F6D\",\"#F76F5C\",\"#DE4968\",\"#B63679\",\"#8C2981\",\"#641A80\",\"#3B0F70\",\"#150E37\")\r\n  )) %>%\r\n  hc_legend(layout = \"vertical\",\r\n            align = \"right\",\r\n            valueDecimals = 0) %>%\r\n  hc_tooltip(\r\n    headerFormat = \"\",\r\n    pointFormat = \"{point.name}: {point.value}\",\r\n    valueDecimals = 0\r\n  ) %>%\r\n  hc_title(text = \"Population Density by County, 2010 to 2018\") %>%\r\n  hc_credits(enabled = TRUE,\r\n             text = \"Author: Kyle Cuilla, Data: USDA ERS\",\r\n             href = \"https://www.ers.usda.gov/data-products/atlas-of-rural-and-small-town-america/download-the-data/\")  \r\n\r\n\r\n\r\nAnd then add the hc_motion option to the map:\r\n\r\n\r\n# Add animation to map\r\nanimated_map <- animated_map %>%\r\n  hc_motion(\r\n    enabled = TRUE,\r\n    series = 0,\r\n    autoPlay = TRUE,\r\n    loop = TRUE,\r\n    labels = unique(density_df_by_year$year)\r\n  )\r\n\r\n\r\n\r\n\r\n\r\n{\"x\":{\"url\":\"guide-to-making-maps_files/figure-html5//widgets/widget_unnamed-chunk-19.html\",\"options\":{\"xdomain\":\"*\",\"allowfullscreen\":false,\"lazyload\":false}},\"evals\":[],\"jsHooks\":[]}\r\n\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-02-28T17:28:12-05:00",
    "input_file": "guide-to-making-maps.utf8.md"
  }
]
